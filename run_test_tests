#!/usr/bin/env bash

# START: Sets correct directories based on local dev machine vs Gradescope production
if [ -f "/autograder/harness.py" ]; then
    echo "[GS] Running on Gradescope container, using Gradescope vars"
    DIR="/autograder/source"
    OUTPUT_DIR="/autograder/results"
    STUDENT_SUBMISSION_DIR="/autograder/submission"
else 
    echo "[GS] Running on local dev machine, using ./localautograder/ "
    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    OUTPUT_DIR="$DIR/localautograder/results"
    STUDENT_SUBMISSION_DIR="$DIR/localautograder/submission"
fi
PYTHON_JSON_TOOL="$DIR/tools/json_generator.py"
# END: Sets correct directories based on local dev machine vs Gradescope production

###########################################################################################
#
#   Start testing the student code
#       - run mvn compile, write compiler output to results.json for student debugging
#       - if that succeeds, try compiling with tests (by running mvn test with no tests)
#
###########################################################################################

cd "$DIR"/staging_test
rm -rf target/

# run mvn test
echo "[GS - Test Tests] Running maven tests"
mvn -B test | tee /tmp/exec_tests.out
if [ ${PIPESTATUS[0]} -eq 0 ]
then
    echo "[GS - Test Tests] student tests succeed on student solution"
    python3 "$PYTHON_JSON_TOOL" -p -t "Student tests pass"> "$OUTPUT_DIR"/results10.json
else
    echo "[GS - Test Tests] student tests fail on student solution. Exiting..."
    python3 "$PYTHON_JSON_TOOL" -t "mvn compile failed" -i /tmp/exec_tests.out > "$OUTPUT_DIR"/results10.json
    exit 1;
fi

echo "[GS - Test Tests] ] Running student tests with mutations"
mvn -B -DwithHistory org.pitest:pitest-maven:mutationCoverage